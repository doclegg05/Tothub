Update my daycare management app to fix the issue where added child records don't appear in the directory. The problem is that the frontend is fetching from /api/children/1 (which returns 404 "Child not found"), but it should fetch the list of all children from /api/children. Also, handle other minor issues.

In the frontend file for the children list (likely src/pages/children.tsx or src/components/children.tsx):
Change the useQuery hook to fetch from /api/children instead of /api/children/1. The queryKey should be ['children']. Set retry: false for now to avoid multiple 404 logs. In the queryFn, throw an error only if !res.ok, and return res.json() which should be an array of children or empty [].
After a successful add (in useMutation onSuccess), invalidate the ['children'] query.
To fix the Radix UI dialog warning, add a <dialogdescription> inside the <dialogcontent> for the add child modal. Make it something like: <dialogdescription class="sr-only">Form to add a new child record</dialogdescription></dialogcontent></dialogdescription>
Remove or comment out all console.log statements in this file to reduce clutter.
In the user-menu file (likely src/components/user-menu.tsx):
Remove or comment out the repeated console.log for user data.
In the backend server file (likely server.js or index.js):
For the GET /api/children endpoint: Ensure it returns 200 with { children: [] } if no children exist, instead of 404. If it's currently set up to fetch by ID, create or adjust a separate route for the list (GET /api/children) that returns all children (query your DB accordingly, e.g., for directors).
For the GET /api/children/:id endpoint: Keep it for single child fetches, but return 404 only if that specific child doesn't exist.
Add or update the Content Security Policy header to allow Replit's dev script: In your app.use middleware, set res.setHeader('Content-Security-Policy', "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://replit.com");
After making these changes, restart the server if needed, and test by adding a child and checking if it appears in the list without 404 errors.